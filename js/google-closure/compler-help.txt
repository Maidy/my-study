 --accept_const_keyword
 : Allows usage of const keyword.
 
 --charset VAL
 : Input and output charset for all files. By default, we accept UTF-8 as input and output US_ASCII
 
 --closure_entry_point VAL
 : Entry points to the program. Must be goog.provide'd symbols. Any goog.provide'd symbols that are not a transitive dependency of the entry points will be removed. Files without goog.provides, and their dependencies, will always be left in. If any entry points are specified, then the manage_closure_dependencies option will be set to true and all files will be sorted in dependency order.
 
 --common_js_entry_module VAL
 : Root of your common JS dependency hierarchy. Your main script.
 
 --common_js_module_path_prefix VAL
 : Path prefix to be removed from Common JS module names.
 
 --compilation_level [WHITESPACE_ONLY | SIMPLE_OPTIMIZATIONS | ADVANCED_OPTIMIZATIONS]
 : Specifies the compilation level to use. Options: WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS
 
 --create_name_map_files
 : If true, variable renaming and property renaming map files will be produced as {binary name}_vars_map.out and {binary name}_props_map.out. Note that this flag cannot be used in conjunction with either variable_map_output_file or property_map_output_file
 
 --create_source_map VAL
 : If specified, a source map file mapping the generated source files back to the original source file will be output to the specified path. The %outname% placeholder will expand to the name of the output file that the source map corresponds to.
 
 --debug : Enable debugging options
 --define (--D, -D) VAL : Override the value of a variable annotated @define. The format is <name>[=<val>], where <name> is the name of a @define variable and <val> is a boolean, number, or a single-quoted string that contains no single quotes. If [=<val>] is omitted, the variable is marked true
 --externs VAL : The file containing javascript externs. You may specify multiple
 --flagfile VAL : A file containing additional command-line options.
 --formatting [PRETTY_PRINT | PRINT_INPUT_DELIMITER] : Specifies which formatting options, if any, should be applied to the output JS. Options: PRETTY_PRINT, PRINT_INPUT_DELIMITER
 --generate_exports                     : Generates export code for those marked with @export
 --help : Displays this message
 --js VAL : The javascript filename. You may specify multiple
 --js_output_file VAL : Primary output filename. If not specified, output is written to stdout
 --jscomp_error VAL : Make the named class of warnings an error. Options:accessControls, ambiguous FunctionDecl, checkRegExp, checkTypes, checkVars, constantProperty, deprecated, duplicateMessage, es5Strict, externsValidation, fileoverviewTags, global This, internetExplorerChecks, invalidCasts, missingProperties, nonStandardJsDocs, strictModuleDepCheck, typeInvalidation, undefinedNames, undefinedVars, unknownDefines, uselessCode, visibility
 --jscomp_off VAL : Turn off the named class of warnings. Options:accessControls, ambiguousFunctionDecl, checkRegExp, checkTypes, checkVars, constantProperty, deprecated, d
                                          uplicateMessage, es5Strict, externsVal
                                          idation, fileoverviewTags, globalThis,
                                           internetExplorerChecks, invalidCasts,
                                           missingProperties, nonStandardJsDocs,
                                           strictModuleDepCheck, typeInvalidatio
                                          n, undefinedNames, undefinedVars, unkn
                                          ownDefines, uselessCode, visibility
 --jscomp_warning VAL                   : Make the named class of warnings a nor
                                          mal warning. Options:accessControls, a
                                          mbiguousFunctionDecl, checkRegExp, che
                                          ckTypes, checkVars, constantProperty, 
                                          deprecated, duplicateMessage, es5Stric
                                          t, externsValidation, fileoverviewTags
                                          , globalThis, internetExplorerChecks, 
                                          invalidCasts, missingProperties, nonSt
                                          andardJsDocs, strictModuleDepCheck, ty
                                          peInvalidation, undefinedNames, undefi
                                          nedVars, unknownDefines, uselessCode, 
                                          visibility
 --language_in VAL                      : Sets what language spec that input sou
                                          rces conform. Options: ECMASCRIPT3 (de
                                          fault), ECMASCRIPT5, ECMASCRIPT5_STRIC
                                          T
 --logging_level VAL                    : The logging level (standard java.util.
                                          logging.Level values) for Compiler pro
                                          gress. Does not control errors or warn
                                          ings for the JavaScript code under com
                                          pilation
 --manage_closure_dependencies          : Automatically sort dependencies so tha
                                          t a file that goog.provides symbol X w
                                          ill always come before a file that goo
                                          g.requires symbol X. If an input provi
                                          des symbols, and those symbols are nev
                                          er required, then that input will not 
                                          be included in the compilation.
 --module VAL                           : A javascript module specification. The
                                           format is <name>:<num-js-files>[:[<de
                                          p>,...][:]]]. Module names must be uni
                                          que. Each dep is the name of a module 
                                          that this module depends on. Modules m
                                          ust be listed in dependency order, and
                                           js source files must be listed in the
                                           corresponding order. Where --module f
                                          lags occur in relation to --js flags i
                                          s unimportant
 --module_output_path_prefix VAL        : Prefix for filenames of compiled js mo
                                          dules. <module-name>.js will be append
                                          ed to this prefix. Directories will be
                                           created as needed. Use with --module
 --module_wrapper VAL                   : An output wrapper for a javascript mod
                                          ule (optional). The format is <name>:<
                                          wrapper>. The module name must corresp
                                          ond with a module specified using --mo
                                          dule. The wrapper must contain %s as t
                                          he code placeholder. The %basename% pl
                                          aceholder can also be used to substitu
                                          te the base name of the module output file.
 --output_manifest VAL                  : Prints out a list of all the files in the compilation. If --manage_closure_dependencies is on, this will not include files that got dropped because they were not required. The %outname% placeholder expands to the js output file. If you're using modularization, using %outname% will create a manifest for each module.
 --output_wrapper VAL                   : Interpolate output into this string atthe place denoted by the marker token %output%. See --output_wrapper_marker
 --print_ast                            : Prints a dot file describing the internal abstract syntax tree and exits
 --print_pass_graph                     : Prints a dot file describing the passes that will get run and exits
 --print_tree                           : Prints out the parse tree and exits
 --process_closure_primitives           : Processes built-ins from the Closure library, such as goog.require(), goog.provide(), and goog.exportSymbol()
 --process_common_js_modules            : Process Common JS modules to a concatenable form.
 --process_jquery_primitives            : Processes built-ins from the Jquery library, such as jQuery.fn and jQuery.extend()
 --property_map_input_file VAL          : File containing the serialized versionof the property renaming map producedby a previous compilation
 --property_map_output_file VAL               : File where the serialized version of the property renaming map produced should be saved
 --source_map_format [V1 | DEFAULT | V2 | V3] : The source map format to produce. Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.
 --summary_detail_level N                     : Controls how detailed the compilation summary is. Values: 0 (never print summary), 1 (print summary only if there are errors or warnings), 2 (print summary if type checking is on, see --check_types), 3 (always print summary). The default level is 1
 --third_party                                : Check source validity but do not enforce Closure style rules and conventions
 --transform_amd_modules                      : Transform AMD to Common JS modules.
 --translations_file VAL                      : Source of translated messages. Currently only supports XTB.
 --translations_project VAL                   : Scopes all translations to the specified project.When specified, we will use different message ids so that messages in different projects can have different translations.
 --use_only_custom_externs                    : Specifies whether the default externs should be excluded
 --variable_map_input_file VAL                : File containing the serialized version of the variable renaming map produced by a previous compilation
 --variable_map_output_file VAL               : File where the serialized version of the variable renaming map produced should be saved
 --version                                    : Prints the compiler version to stderr.
 --warning_level [QUIET | DEFAULT | VERBOSE]  : Specifies the warning level to use. Options: QUIET, DEFAULT, VERBOSE
                                   
